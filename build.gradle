// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    loadVersions: {
        def versions_properties_path = 'version.properties'
        def versions = new Properties()
        versions.load(file(versions_properties_path).newReader())
        versions.forEach { key, value ->
            ext.set(key, value)
        }
    }
    repositories {
        google()
        jcenter()
        maven {
            url project.rootDir.absolutePath+"/repo"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$build_gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:1.4.32'
        classpath 'io.github.duduhuang88:gradle-plugin'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

}

allprojects {
    repositories {
        google()
        jcenter()
        mavenLocal()
        maven {
            url project.rootDir.absolutePath+"/repo"
        }
    }
}

task clean2(type: Delete) {
    delete rootProject.buildDir
    dependsOn gradle.includedBuild('codeplugin').task(':gradle-plugin:clean')
    dependsOn gradle.includedBuild('codeplugin').task(':transform:clean')
    dependsOn gradle.includedBuild('codeplugin').task(':qxml-processor:clean')
    dependsOn gradle.includedBuild('sdk').task(':qxml-lib:clean')
    dependsOn gradle.includedBuild('sdk-support').task(':qxml-support:clean')
    //dependsOn gradle.includedBuild('codeplugin').task(':constant:clean')
    //dependsOn gradle.includedBuild('codeplugin').task(':qxml-annotations:clean')
}

apply from: './common.gradle'
apply from: './maven.gradle'